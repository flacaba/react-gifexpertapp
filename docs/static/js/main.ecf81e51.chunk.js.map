{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GiftGrid","GifExpertApp","categories","console","log","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,cAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAiBzC,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAMhB,SACE,uBACEO,KAAK,OACLC,MAAST,EACTU,SAnBe,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAWH,GAF7C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC5BC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATd,kBAadM,GAbc,4CAAH,sDCyBLO,EAtBM,SAAEf,GAAe,IAAD,EACTd,mBAAS,CACjCqB,KAAM,GACNS,SAAS,IAHwB,mBAC5BC,EAD4B,KACrBC,EADqB,KAmBnC,OAbAC,qBAAU,WAERpB,EAASC,GACNoB,MAAM,SAAAC,GACLH,EAAS,CACPX,KAAMc,EACNL,SAAQ,SAKb,CAAChB,IAEGiB,GCVMK,EAXK,SAAC,GAAiB,IAAhBV,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC1B,OAEE,sBAAKqB,UAAU,yCAAf,UACE,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QCkBKc,EAtBE,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EAEAe,EAAcf,GAAlCa,EAFoB,EAEzBN,KAAaS,EAFY,EAEZA,QAErB,OACE,qCACE,oBAAIO,UAAU,oCAAd,SAAoDvB,IAElDgB,GAAW,mBAAGO,UAAY,mCAAf,qBAEb,qBAAKA,UAAU,YAAf,SACMV,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEMA,GADGA,EAAIC,aCgBVgB,EA3BM,WAAO,IAAD,EAEWzC,mBAAS,CAAC,cAFrB,mBAElB0C,EAFkB,KAEN3C,EAFM,KAMzB,OAFA4C,QAAQC,IAAR,eAAoBF,IAGlB,qCACE,8CACA,uBACA,cAAC,EAAD,CAAa3C,cAAkBA,IAC/B,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEEA,SAAaA,GADLA,Y,MCZxB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ecf81e51.chunk.js","sourcesContent":["\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({ setCategories }) => {\n\n  const [inputValue, setInputValue] = useState('Hola Mundo')\n  const handleChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if(inputValue.trim().length > 2) {\n      setCategories( cats => [inputValue,...cats])\n      setInputValue('')\n    }\n  }\n  \n\n  return (\n    <form onSubmit= { handleSubmit }>\n      <input\n        type='text'\n        value= { inputValue }\n        onChange = { handleChange }\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n  ","\nexport const getGifs = async (category) => {\n\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=aoMh9GpCwuxqSCVcDjGMOJAv2JrN8MfF`\n  const resp = await fetch(url)\n  const { data } = await resp.json()\n\n  const gifs = data.map(img => ({\n    id:img.id,\n    title:img.title,\n    url:img.images?.downsized_medium.url\n  }))\n\n \n  return gifs\n \n}","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\n\nconst useFetchGifs = ( category ) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect(() => {\n\n    getGifs( category )\n      .then( imgs => {\n        setState({\n          data: imgs,\n          loading:false\n        })\n \n      })\n\n  }, [category])\n\n  return state //{data:[],loading:true}\n}\n\nexport default useFetchGifs","import React from 'react'\n\nconst GifGridItem = ({title,url}) => {\n  return (\n\n    <div className='card animate__animated animate__fadeIn'>\n      <img src={url} alt={title}/>\n      <p>{title}</p>\n    </div>\n\n  )\n}\n\nexport default GifGridItem\n","import useFetchGifs from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem'\n\nconst GiftGrid = ({ category }) => {\n\n  const { data:images, loading } = useFetchGifs( category )\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n      { loading && <p className = \"animate__animated animate__flash\">Loading</p> }\n\n      <div className=\"card-grid\">\n          { images.map( img => (\n            <GifGridItem\n              key = {img.id}\n              {...img}\n            />\n          ))}\n      </div>\n    </>\n  )\n}\n\nexport default GiftGrid\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GiftGrid from './components/GifGrid';\n\n\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['One Punch'])\n\n  console.log(`Hola ${categories}`)\n\n  return(\n    <>\n      <h2>GifExpertApp</h2>\n      <hr/>\n      <AddCategory setCategories = { setCategories }/>\n      <ol>\n        {\n          categories.map( category => (\n              <GiftGrid \n                key = { category }\n                category = { category }\n              />\n            ))\n        }\n      </ol>\n\n    </>\n\n  )\n}\n\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}